{"ast":null,"code":"const isEmail = value => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value);\n\nconst isStrongPassword = value => /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/.test(value);\n\nconst isPassConfirmed = (password, confirmation) => password === confirmation;\n\nexport default (({\n  isAuth,\n  values,\n  errors\n}) => {\n  const rules = {\n    email: value => {\n      if (!value) {\n        errors.email = 'Введите E-mail ';\n      } else if (!isEmail(value)) {\n        errors.email = 'Неверный почтовый адрес';\n      }\n    },\n    name: value => {\n      if (!value) {\n        errors.name = 'Введите имя';\n      }\n    },\n    password: value => {\n      if (!value) {\n        errors.password = 'Введите пароль';\n      } else if (!isStrongPassword(value)) {\n        errors.password = isAuth ? 'Неверный пароль' : 'Пароль должен быть сложным';\n      }\n    },\n    confirmation: value => {\n      if (!value) {\n        errors.confirmation = 'Повторите пароль';\n      } else if (!isPassConfirmed(values.password, value)) {\n        errors.confirmation = 'Пароли должны совпадать';\n      }\n    }\n  };\n  Object.keys(values).forEach(key => rules[key] && rules[key](values[key]));\n});","map":{"version":3,"sources":["/home/front/projects/react-chat/src/utils/validation.js"],"names":["isEmail","value","test","isStrongPassword","isPassConfirmed","password","confirmation","isAuth","values","errors","rules","email","name","Object","keys","forEach","key"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,KAAK,IAAI,4CAA4CC,IAA5C,CAAiDD,KAAjD,CAAzB;;AACA,MAAME,gBAAgB,GAAGF,KAAK,IAC5B,kDAAkDC,IAAlD,CAAuDD,KAAvD,CADF;;AAEA,MAAMG,eAAe,GAAG,CAACC,QAAD,EAAWC,YAAX,KAA4BD,QAAQ,KAAKC,YAAjE;;AAEA,gBAAe,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAAD,KAAgC;AAC7C,QAAMC,KAAK,GAAG;AACZC,IAAAA,KAAK,EAAEV,KAAK,IAAI;AACd,UAAI,CAACA,KAAL,EAAY;AACVQ,QAAAA,MAAM,CAACE,KAAP,GAAe,iBAAf;AACD,OAFD,MAEO,IAAI,CAACX,OAAO,CAACC,KAAD,CAAZ,EAAqB;AAC1BQ,QAAAA,MAAM,CAACE,KAAP,GAAe,yBAAf;AACD;AACF,KAPW;AAQZC,IAAAA,IAAI,EAAEX,KAAK,IAAI;AACb,UAAI,CAACA,KAAL,EAAY;AACVQ,QAAAA,MAAM,CAACG,IAAP,GAAc,aAAd;AACD;AACF,KAZW;AAaZP,IAAAA,QAAQ,EAAEJ,KAAK,IAAI;AACjB,UAAI,CAACA,KAAL,EAAY;AACVQ,QAAAA,MAAM,CAACJ,QAAP,GAAkB,gBAAlB;AACD,OAFD,MAEO,IAAI,CAACF,gBAAgB,CAACF,KAAD,CAArB,EAA8B;AACnCQ,QAAAA,MAAM,CAACJ,QAAP,GAAkBE,MAAM,GACpB,iBADoB,GAEpB,4BAFJ;AAGD;AACF,KArBW;AAsBZD,IAAAA,YAAY,EAAEL,KAAK,IAAI;AACrB,UAAI,CAACA,KAAL,EAAY;AACVQ,QAAAA,MAAM,CAACH,YAAP,GAAsB,kBAAtB;AACD,OAFD,MAEO,IAAI,CAACF,eAAe,CAACI,MAAM,CAACH,QAAR,EAAkBJ,KAAlB,CAApB,EAA8C;AACnDQ,QAAAA,MAAM,CAACH,YAAP,GAAsB,yBAAtB;AACD;AACF;AA5BW,GAAd;AA+BAO,EAAAA,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,OAApB,CAA4BC,GAAG,IAAIN,KAAK,CAACM,GAAD,CAAL,IAAcN,KAAK,CAACM,GAAD,CAAL,CAAWR,MAAM,CAACQ,GAAD,CAAjB,CAAjD;AACD,CAjCD","sourcesContent":["const isEmail = value => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\nconst isStrongPassword = value =>\n  /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/.test(value)\nconst isPassConfirmed = (password, confirmation) => password === confirmation\n\nexport default ({ isAuth, values, errors }) => {\n  const rules = {\n    email: value => {\n      if (!value) {\n        errors.email = 'Введите E-mail '\n      } else if (!isEmail(value)) {\n        errors.email = 'Неверный почтовый адрес'\n      }\n    },\n    name: value => {\n      if (!value) {\n        errors.name = 'Введите имя'\n      }\n    },\n    password: value => {\n      if (!value) {\n        errors.password = 'Введите пароль'\n      } else if (!isStrongPassword(value)) {\n        errors.password = isAuth\n          ? 'Неверный пароль'\n          : 'Пароль должен быть сложным'\n      }\n    },\n    confirmation: value => {\n      if (!value) {\n        errors.confirmation = 'Повторите пароль'\n      } else if (!isPassConfirmed(values.password, value)) {\n        errors.confirmation = 'Пароли должны совпадать'\n      }\n    },\n  }\n\n  Object.keys(values).forEach(key => rules[key] && rules[key](values[key]))\n}\n"]},"metadata":{},"sourceType":"module"}