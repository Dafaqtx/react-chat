{"ast":null,"code":"var _jsxFileName = \"/home/front/projects/react-chat/src/components/Message/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { MessageAudio, CheckMarker, Time } from 'components';\nimport './Message.scss';\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  date,\n  attachments,\n  audioFile,\n  isMine,\n  isReaded,\n  isTyping\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('Message', {\n      'Message--my': isMine,\n      'Message--typing': isTyping,\n      'Message--audio': audioFile !== '',\n      'Message--image': attachments.length === 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar,\n    alt: `Avatar ${user.fullName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, (audioFile || text || isTyping) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__bubble\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, text && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Message__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }\n  }, text), isTyping && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__typing-indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  })), audioFile && /*#__PURE__*/React.createElement(MessageAudio, {\n    src: audioFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  })), !!attachments.length && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"Message__attachments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, attachments.map((attach, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"Message__attachments-item\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: attach.url,\n    alt: attach.fileName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  })))), date && /*#__PURE__*/React.createElement(Time, {\n    value: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }\n  }))), isMine && /*#__PURE__*/React.createElement(CheckMarker, {\n    checked: isReaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }\n  }));\n};\n\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  user: PropTypes.object,\n  text: PropTypes.string,\n  date: PropTypes.number,\n  attachments: PropTypes.array,\n  audioFile: PropTypes.string,\n  isMine: PropTypes.bool,\n  isReaded: PropTypes.bool,\n  isTyping: PropTypes.bool\n};\nMessage.defaultProps = {\n  user: {},\n  attachments: [],\n  audioFile: '',\n  isMine: false,\n  isReaded: false,\n  isTyping: false\n};\nexport default Message;","map":{"version":3,"sources":["/home/front/projects/react-chat/src/components/Message/index.js"],"names":["React","PropTypes","classNames","MessageAudio","CheckMarker","Time","Message","avatar","user","text","date","attachments","audioFile","isMine","isReaded","isTyping","length","fullName","map","attach","index","url","fileName","propTypes","string","object","number","array","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { MessageAudio, CheckMarker, Time } from 'components'\n\nimport './Message.scss'\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  date,\n  attachments,\n  audioFile,\n  isMine,\n  isReaded,\n  isTyping,\n}) => {\n  return (\n    <div\n      className={classNames('Message', {\n        'Message--my': isMine,\n        'Message--typing': isTyping,\n        'Message--audio': audioFile !== '',\n        'Message--image': attachments.length === 1,\n      })}>\n      <div className=\"Message__avatar\">\n        <img src={avatar} alt={`Avatar ${user.fullName}`} />\n      </div>\n      <div className=\"Message__info\">\n        <div className=\"Message__content\">\n          {(audioFile || text || isTyping) && (\n            <div className=\"Message__bubble\">\n              {text && <p className=\"Message__text\">{text}</p>}\n\n              {isTyping && (\n                <div className=\"Message__typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              )}\n\n              {audioFile && <MessageAudio src={audioFile} />}\n            </div>\n          )}\n          {!!attachments.length && (\n            <ul className=\"Message__attachments\">\n              {attachments.map((attach, index) => (\n                <li className=\"Message__attachments-item\" key={index}>\n                  <img src={attach.url} alt={attach.fileName} />\n                </li>\n              ))}\n            </ul>\n          )}\n          {date && <Time value={date} />}\n        </div>\n      </div>\n      {isMine && <CheckMarker checked={isReaded} />}\n    </div>\n  )\n}\n\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  user: PropTypes.object,\n  text: PropTypes.string,\n  date: PropTypes.number,\n  attachments: PropTypes.array,\n  audioFile: PropTypes.string,\n  isMine: PropTypes.bool,\n  isReaded: PropTypes.bool,\n  isTyping: PropTypes.bool,\n}\n\nMessage.defaultProps = {\n  user: {},\n  attachments: [],\n  audioFile: '',\n  isMine: false,\n  isReaded: false,\n  isTyping: false,\n}\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}