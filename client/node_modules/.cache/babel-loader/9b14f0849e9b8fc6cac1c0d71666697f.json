{"ast":null,"code":"import LoginForm from '../components/LoginForm';\nimport validateForm from 'utils/validation';\nimport { withFormik } from 'formik';\nexport default withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: () => ({\n    name: '',\n    password: ''\n  }),\n  validate: values => {\n    const errors = {};\n    validateForm({\n      isAuth: true,\n      values,\n      errors\n    });\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n  displayName: 'LoginForm'\n})(LoginForm);","map":{"version":3,"sources":["/home/front/projects/react-chat/client/src/modules/LoginForm/containers/LoginForm.js"],"names":["LoginForm","validateForm","withFormik","enableReinitialize","mapPropsToValues","name","password","validate","values","errors","isAuth","handleSubmit","setSubmitting","setTimeout","alert","JSON","stringify","displayName"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,eAAeA,UAAU,CAAC;AACxBC,EAAAA,kBAAkB,EAAE,IADI;AAExBC,EAAAA,gBAAgB,EAAE,OAAO;AACvBC,IAAAA,IAAI,EAAE,EADiB;AAEvBC,IAAAA,QAAQ,EAAE;AAFa,GAAP,CAFM;AAMxBC,EAAAA,QAAQ,EAAEC,MAAM,IAAI;AAClB,UAAMC,MAAM,GAAG,EAAf;AAEAR,IAAAA,YAAY,CAAC;AAAES,MAAAA,MAAM,EAAE,IAAV;AAAgBF,MAAAA,MAAhB;AAAwBC,MAAAA;AAAxB,KAAD,CAAZ;AAEA,WAAOA,MAAP;AACD,GAZuB;AAcxBE,EAAAA,YAAY,EAAE,CAACH,MAAD,EAAS;AAAEI,IAAAA;AAAF,GAAT,KAA+B;AAC3CC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeR,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAI,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAnBuB;AAqBxBK,EAAAA,WAAW,EAAE;AArBW,CAAD,CAAV,CAsBZjB,SAtBY,CAAf","sourcesContent":["import LoginForm from '../components/LoginForm'\nimport validateForm from 'utils/validation'\nimport { withFormik } from 'formik'\n\nexport default withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: () => ({\n    name: '',\n    password: '',\n  }),\n  validate: values => {\n    const errors = {}\n\n    validateForm({ isAuth: true, values, errors })\n\n    return errors\n  },\n\n  handleSubmit: (values, { setSubmitting }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2))\n      setSubmitting(false)\n    }, 1000)\n  },\n\n  displayName: 'LoginForm',\n})(LoginForm)\n"]},"metadata":{},"sourceType":"module"}