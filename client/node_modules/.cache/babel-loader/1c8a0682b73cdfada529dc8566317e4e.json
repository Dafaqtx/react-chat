{"ast":null,"code":"import { withFormik } from 'formik';\nimport RegistrationForm from '../components/RegistrationForm';\nexport default withFormik({\n  validate: values => {\n    let errors = {};\n    console.log(values);\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n  displayName: 'RegistrationForm'\n})(RegistrationForm);","map":{"version":3,"sources":["/home/front/projects/react-chat/src/modules/RegistrationForm/containers/RegistrationForm.js"],"names":["withFormik","RegistrationForm","validate","values","errors","console","log","email","test","handleSubmit","setSubmitting","setTimeout","alert","JSON","stringify","displayName"],"mappings":"AAAA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AAEA,eAAeD,UAAU,CAAC;AACxBE,EAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpB,QAAIC,MAAM,GAAG,EAAb;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,QAAI,CAACA,MAAM,CAACI,KAAZ,EAAmB;AACjBH,MAAAA,MAAM,CAACG,KAAP,GAAe,UAAf;AACD,KAFD,MAEO,IAAI,CAAC,4CAA4CC,IAA5C,CAAiDL,MAAM,CAACI,KAAxD,CAAL,EAAqE;AAC1EH,MAAAA,MAAM,CAACG,KAAP,GAAe,uBAAf;AACD;;AAED,WAAOH,MAAP;AACD,GAZuB;AAcxBK,EAAAA,YAAY,EAAE,CAACN,MAAD,EAAS;AAAEO,IAAAA;AAAF,GAAT,KAA+B;AAC3CC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeX,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAO,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GAnBuB;AAqBxBK,EAAAA,WAAW,EAAE;AArBW,CAAD,CAAV,CAsBZd,gBAtBY,CAAf","sourcesContent":["import { withFormik } from 'formik'\nimport RegistrationForm from '../components/RegistrationForm'\n\nexport default withFormik({\n  validate: (values) => {\n    let errors = {}\n\n    console.log(values)\n    if (!values.email) {\n      errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address'\n    }\n\n    return errors\n  },\n\n  handleSubmit: (values, { setSubmitting }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2))\n      setSubmitting(false)\n    }, 1000)\n  },\n\n  displayName: 'RegistrationForm',\n})(RegistrationForm)\n"]},"metadata":{},"sourceType":"module"}