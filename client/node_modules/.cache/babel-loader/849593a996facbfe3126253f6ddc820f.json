{"ast":null,"code":"import { withFormik } from 'formik';\nimport RegistrationForm from '../components/RegistrationForm';\nexport default withFormik({\n  validate: values => {\n    let errors = {};\n\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n\n    if (!values.password) {\n      errors.password = 'Введите пароль';\n    } else if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/.test(values.password)) {\n      errors.password = 'Пароль должен быть сложным';\n    }\n\n    if (!values.confirmation) {\n      errors.confirmation = 'Введите пароль';\n    } else if (values.password !== values.confirmation) {\n      errors.confirmation = 'Пароли должны совпадать';\n    }\n\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  },\n  displayName: 'RegistrationForm'\n})(RegistrationForm);","map":{"version":3,"sources":["/home/front/projects/react-chat/src/modules/RegistrationForm/containers/RegistrationForm.js"],"names":["withFormik","RegistrationForm","validate","values","errors","email","test","password","confirmation","handleSubmit","setSubmitting","setTimeout","alert","JSON","stringify","displayName"],"mappings":"AAAA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AAEA,eAAeD,UAAU,CAAC;AACxBE,EAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpB,QAAIC,MAAM,GAAG,EAAb;;AAEA,QAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB;AACjBD,MAAAA,MAAM,CAACC,KAAP,GAAe,UAAf;AACD,KAFD,MAEO,IAAI,CAAC,4CAA4CC,IAA5C,CAAiDH,MAAM,CAACE,KAAxD,CAAL,EAAqE;AAC1ED,MAAAA,MAAM,CAACC,KAAP,GAAe,uBAAf;AACD;;AAED,QAAI,CAACF,MAAM,CAACI,QAAZ,EAAsB;AACpBH,MAAAA,MAAM,CAACG,QAAP,GAAkB,gBAAlB;AACD,KAFD,MAEO,IAAI,CAAC,kDAAkDD,IAAlD,CAAuDH,MAAM,CAACI,QAA9D,CAAL,EAA8E;AACnFH,MAAAA,MAAM,CAACG,QAAP,GAAkB,4BAAlB;AACD;;AAED,QAAI,CAACJ,MAAM,CAACK,YAAZ,EAA0B;AACxBJ,MAAAA,MAAM,CAACI,YAAP,GAAsB,gBAAtB;AACD,KAFD,MAEO,IAAIL,MAAM,CAACI,QAAP,KAAoBJ,MAAM,CAACK,YAA/B,EAA6C;AAClDJ,MAAAA,MAAM,CAACI,YAAP,GAAsB,yBAAtB;AACD;;AAED,WAAOJ,MAAP;AACD,GAvBuB;AAyBxBK,EAAAA,YAAY,EAAE,CAACN,MAAD,EAAS;AAAEO,IAAAA;AAAF,GAAT,KAA+B;AAC3CC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeX,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAO,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GA9BuB;AAgCxBK,EAAAA,WAAW,EAAE;AAhCW,CAAD,CAAV,CAiCZd,gBAjCY,CAAf","sourcesContent":["import { withFormik } from 'formik'\nimport RegistrationForm from '../components/RegistrationForm'\n\nexport default withFormik({\n  validate: (values) => {\n    let errors = {}\n\n    if (!values.email) {\n      errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address'\n    }\n\n    if (!values.password) {\n      errors.password = 'Введите пароль'\n    } else if (!/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}$/.test(values.password)) {\n      errors.password = 'Пароль должен быть сложным'\n    }\n\n    if (!values.confirmation) {\n      errors.confirmation = 'Введите пароль'\n    } else if (values.password !== values.confirmation) {\n      errors.confirmation = 'Пароли должны совпадать'\n    }\n\n    return errors\n  },\n\n  handleSubmit: (values, { setSubmitting }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2))\n      setSubmitting(false)\n    }, 1000)\n  },\n\n  displayName: 'RegistrationForm',\n})(RegistrationForm)\n"]},"metadata":{},"sourceType":"module"}