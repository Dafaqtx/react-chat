{"ast":null,"code":"var _jsxFileName = \"/home/front/projects/react-chat/src/components/Message/index.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { CheckMarker, Time } from 'components';\nimport { voiceDiagramIcon, playIcon, pauseIcon } from 'assets/icons';\nimport './Message.scss';\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  date,\n  attachments,\n  audioFile,\n  isMine,\n  isReaded,\n  isTyping\n}) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const [audioTime, setAudioTime] = useState(0);\n  const audioRef = useRef(null);\n\n  function calculateCurrentValue(currentTime) {\n    var current_hour = parseInt(currentTime / 3600) % 24,\n        current_minute = parseInt(currentTime / 60) % 60,\n        current_seconds_long = currentTime % 60,\n        current_seconds = current_seconds_long.toFixed(),\n        current_time = (current_minute < 10 ? '0' + current_minute : current_minute) + ':' + (current_seconds < 10 ? '0' + current_seconds : current_seconds);\n    return current_time;\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      var _audioRef$current;\n\n      return setAudioTime(calculateCurrentValue((_audioRef$current = audioRef.current) === null || _audioRef$current === void 0 ? void 0 : _audioRef$current.currentTime));\n    }, 1000);\n\n    if (audioRef.current) {\n      audioRef.current.addEventListener('playing', () => {\n        setIsPlaying(true);\n      }, false);\n      audioRef.current.addEventListener('ended, pause', () => {\n        setIsPlaying(false);\n      }, false);\n      audioRef.current.addEventListener('pause', () => {\n        setIsPlaying(false);\n      }, false);\n      audioRef.current.addEventListener('loadedmetadata', () => {\n        setAudioDuration(audioRef.current.duration);\n      }, false);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const togglePlay = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('Message', {\n      'Message--my': isMine,\n      'Message--typing': isTyping,\n      'Message--audio': audioFile !== '',\n      'Message--image': attachments.length === 1\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar,\n    alt: `Avatar ${user.fullName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, (audioFile || text || isTyping) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__bubble\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, text && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Message__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 24\n    }\n  }, text), isTyping && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__typing-indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  })), audioFile && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__audio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    src: audioFile,\n    ref: audioRef,\n    preload: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__audio-progress\",\n    style: {\n      width: '40%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__audio-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__audio-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => togglePlay(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: isPlaying ? pauseIcon : playIcon,\n    alt: isPlaying ? 'Pause' : 'Play',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__audio-diagram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: voiceDiagramIcon,\n    alt: \"Voice diagram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"Message__audio-duration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, audioTime)))), !!attachments.length && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"Message__attachments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, attachments.map((attach, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: \"Message__attachments-item\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: attach.url,\n    alt: attach.fileName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  })))), date && /*#__PURE__*/React.createElement(Time, {\n    value: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 20\n    }\n  }))), isMine && /*#__PURE__*/React.createElement(CheckMarker, {\n    checked: isReaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 18\n    }\n  }));\n};\n\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  user: PropTypes.object,\n  text: PropTypes.string,\n  date: PropTypes.number,\n  attachments: PropTypes.array,\n  audioFile: PropTypes.string,\n  isMine: PropTypes.bool,\n  isReaded: PropTypes.bool,\n  isTyping: PropTypes.bool\n};\nMessage.defaultProps = {\n  user: {},\n  attachments: [],\n  audioFile: '',\n  isMine: false,\n  isReaded: false,\n  isTyping: false\n};\nexport default Message;","map":{"version":3,"sources":["/home/front/projects/react-chat/src/components/Message/index.js"],"names":["React","useState","useRef","useEffect","PropTypes","classNames","CheckMarker","Time","voiceDiagramIcon","playIcon","pauseIcon","Message","avatar","user","text","date","attachments","audioFile","isMine","isReaded","isTyping","isPlaying","setIsPlaying","audioDuration","setAudioDuration","audioTime","setAudioTime","audioRef","calculateCurrentValue","currentTime","current_hour","parseInt","current_minute","current_seconds_long","current_seconds","toFixed","current_time","interval","setInterval","current","addEventListener","duration","clearInterval","togglePlay","pause","play","length","fullName","width","map","attach","index","url","fileName","propTypes","string","object","number","array","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,WAAT,EAAsBC,IAAtB,QAAkC,YAAlC;AACA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,cAAtD;AAEA,OAAO,gBAAP;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,MADe;AAEfC,EAAAA,IAFe;AAGfC,EAAAA,IAHe;AAIfC,EAAAA,IAJe;AAKfC,EAAAA,WALe;AAMfC,EAAAA,SANe;AAOfC,EAAAA,MAPe;AAQfC,EAAAA,QARe;AASfC,EAAAA;AATe,CAAD,KAUV;AACJ,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACsB,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACwB,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM0B,QAAQ,GAAGzB,MAAM,CAAC,IAAD,CAAvB;;AAEA,WAAS0B,qBAAT,CAA+BC,WAA/B,EAA4C;AAC1C,QAAIC,YAAY,GAAGC,QAAQ,CAACF,WAAW,GAAG,IAAf,CAAR,GAA+B,EAAlD;AAAA,QACEG,cAAc,GAAGD,QAAQ,CAACF,WAAW,GAAG,EAAf,CAAR,GAA6B,EADhD;AAAA,QAEEI,oBAAoB,GAAGJ,WAAW,GAAG,EAFvC;AAAA,QAGEK,eAAe,GAAGD,oBAAoB,CAACE,OAArB,EAHpB;AAAA,QAIEC,YAAY,GACV,CAACJ,cAAc,GAAG,EAAjB,GAAsB,MAAMA,cAA5B,GAA6CA,cAA9C,IACA,GADA,IAECE,eAAe,GAAG,EAAlB,GAAuB,MAAMA,eAA7B,GAA+CA,eAFhD,CALJ;AASA,WAAOE,YAAP;AACD;;AAEDjC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkC,QAAQ,GAAGC,WAAW,CAC1B;AAAA;;AAAA,aAAMZ,YAAY,CAACE,qBAAqB,sBAACD,QAAQ,CAACY,OAAV,sDAAC,kBAAkBV,WAAnB,CAAtB,CAAlB;AAAA,KAD0B,EAE1B,IAF0B,CAA5B;;AAIA,QAAIF,QAAQ,CAACY,OAAb,EAAsB;AACpBZ,MAAAA,QAAQ,CAACY,OAAT,CAAiBC,gBAAjB,CACE,SADF,EAEE,MAAM;AACJlB,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAJH,EAKE,KALF;AAQAK,MAAAA,QAAQ,CAACY,OAAT,CAAiBC,gBAAjB,CACE,cADF,EAEE,MAAM;AACJlB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJH,EAKE,KALF;AAQAK,MAAAA,QAAQ,CAACY,OAAT,CAAiBC,gBAAjB,CACE,OADF,EAEE,MAAM;AACJlB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAJH,EAKE,KALF;AAOAK,MAAAA,QAAQ,CAACY,OAAT,CAAiBC,gBAAjB,CACE,gBADF,EAEE,MAAM;AACJhB,QAAAA,gBAAgB,CAACG,QAAQ,CAACY,OAAT,CAAiBE,QAAlB,CAAhB;AACD,OAJH,EAKE,KALF;AAOD;;AAED,WAAO,MAAM;AACXC,MAAAA,aAAa,CAACL,QAAD,CAAb;AACD,KAFD;AAGD,GAzCQ,EAyCN,EAzCM,CAAT;;AA2CA,QAAMM,UAAU,GAAG,MAAM;AACvB,QAAItB,SAAJ,EAAe;AACbM,MAAAA,QAAQ,CAACY,OAAT,CAAiBK,KAAjB;AACD,KAFD,MAEO;AACLjB,MAAAA,QAAQ,CAACY,OAAT,CAAiBM,IAAjB;AACD;AACF,GAND;;AAQA,sBACE;AACE,IAAA,SAAS,EAAExC,UAAU,CAAC,SAAD,EAAY;AAC/B,qBAAea,MADgB;AAE/B,yBAAmBE,QAFY;AAG/B,wBAAkBH,SAAS,KAAK,EAHD;AAI/B,wBAAkBD,WAAW,CAAC8B,MAAZ,KAAuB;AAJV,KAAZ,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAElC,MAAV;AAAkB,IAAA,GAAG,EAAG,UAASC,IAAI,CAACkC,QAAS,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,eAUE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC9B,SAAS,IAAIH,IAAb,IAAqBM,QAAtB,kBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,iBAAI;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,IAA9B,CADX,EAGGM,QAAQ,iBACP;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAJJ,EAWGH,SAAS,iBACR;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,GAAG,EAAEA,SAAZ;AAAuB,IAAA,GAAG,EAAEU,QAA5B;AAAsC,IAAA,OAAO,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,SAAS,EAAC,yBADZ;AAEE,IAAA,KAAK,EAAE;AAAEqB,MAAAA,KAAK,EAAE;AAAT,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAKE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAML,UAAU,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEtB,SAAS,GAAGX,SAAH,GAAeD,QAD/B;AAEE,IAAA,GAAG,EAAEY,SAAS,GAAG,OAAH,GAAa,MAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEb,gBAAV;AAA4B,IAAA,GAAG,EAAC,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,eAYE;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CiB,SAA3C,CAZF,CALF,CAZJ,CAFJ,EAqCG,CAAC,CAACT,WAAW,CAAC8B,MAAd,iBACC;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG9B,WAAW,CAACiC,GAAZ,CAAgB,CAACC,MAAD,EAASC,KAAT,kBACf;AAAI,IAAA,SAAS,EAAC,2BAAd;AAA0C,IAAA,GAAG,EAAEA,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAED,MAAM,CAACE,GAAjB;AAAsB,IAAA,GAAG,EAAEF,MAAM,CAACG,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CAtCJ,EA8CGtC,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEA,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CX,CADF,CAVF,EA4DGG,MAAM,iBAAI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5Db,CADF;AAgED,CAhJD;;AAkJAR,OAAO,CAAC2C,SAAR,GAAoB;AAClB1C,EAAAA,MAAM,EAAER,SAAS,CAACmD,MADA;AAElB1C,EAAAA,IAAI,EAAET,SAAS,CAACoD,MAFE;AAGlB1C,EAAAA,IAAI,EAAEV,SAAS,CAACmD,MAHE;AAIlBxC,EAAAA,IAAI,EAAEX,SAAS,CAACqD,MAJE;AAKlBzC,EAAAA,WAAW,EAAEZ,SAAS,CAACsD,KALL;AAMlBzC,EAAAA,SAAS,EAAEb,SAAS,CAACmD,MANH;AAOlBrC,EAAAA,MAAM,EAAEd,SAAS,CAACuD,IAPA;AAQlBxC,EAAAA,QAAQ,EAAEf,SAAS,CAACuD,IARF;AASlBvC,EAAAA,QAAQ,EAAEhB,SAAS,CAACuD;AATF,CAApB;AAYAhD,OAAO,CAACiD,YAAR,GAAuB;AACrB/C,EAAAA,IAAI,EAAE,EADe;AAErBG,EAAAA,WAAW,EAAE,EAFQ;AAGrBC,EAAAA,SAAS,EAAE,EAHU;AAIrBC,EAAAA,MAAM,EAAE,KAJa;AAKrBC,EAAAA,QAAQ,EAAE,KALW;AAMrBC,EAAAA,QAAQ,EAAE;AANW,CAAvB;AASA,eAAeT,OAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { CheckMarker, Time } from 'components'\nimport { voiceDiagramIcon, playIcon, pauseIcon } from 'assets/icons'\n\nimport './Message.scss'\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  date,\n  attachments,\n  audioFile,\n  isMine,\n  isReaded,\n  isTyping,\n}) => {\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [audioDuration, setAudioDuration] = useState(0)\n  const [audioTime, setAudioTime] = useState(0)\n  const audioRef = useRef(null)\n\n  function calculateCurrentValue(currentTime) {\n    var current_hour = parseInt(currentTime / 3600) % 24,\n      current_minute = parseInt(currentTime / 60) % 60,\n      current_seconds_long = currentTime % 60,\n      current_seconds = current_seconds_long.toFixed(),\n      current_time =\n        (current_minute < 10 ? '0' + current_minute : current_minute) +\n        ':' +\n        (current_seconds < 10 ? '0' + current_seconds : current_seconds)\n\n    return current_time\n  }\n\n  useEffect(() => {\n    const interval = setInterval(\n      () => setAudioTime(calculateCurrentValue(audioRef.current?.currentTime)),\n      1000\n    )\n    if (audioRef.current) {\n      audioRef.current.addEventListener(\n        'playing',\n        () => {\n          setIsPlaying(true)\n        },\n        false\n      )\n\n      audioRef.current.addEventListener(\n        'ended, pause',\n        () => {\n          setIsPlaying(false)\n        },\n        false\n      )\n\n      audioRef.current.addEventListener(\n        'pause',\n        () => {\n          setIsPlaying(false)\n        },\n        false\n      )\n      audioRef.current.addEventListener(\n        'loadedmetadata',\n        () => {\n          setAudioDuration(audioRef.current.duration)\n        },\n        false\n      )\n    }\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [])\n\n  const togglePlay = () => {\n    if (isPlaying) {\n      audioRef.current.pause()\n    } else {\n      audioRef.current.play()\n    }\n  }\n\n  return (\n    <div\n      className={classNames('Message', {\n        'Message--my': isMine,\n        'Message--typing': isTyping,\n        'Message--audio': audioFile !== '',\n        'Message--image': attachments.length === 1,\n      })}>\n      <div className=\"Message__avatar\">\n        <img src={avatar} alt={`Avatar ${user.fullName}`} />\n      </div>\n      <div className=\"Message__info\">\n        <div className=\"Message__content\">\n          {(audioFile || text || isTyping) && (\n            <div className=\"Message__bubble\">\n              {text && <p className=\"Message__text\">{text}</p>}\n\n              {isTyping && (\n                <div className=\"Message__typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              )}\n\n              {audioFile && (\n                <div className=\"Message__audio\">\n                  <audio src={audioFile} ref={audioRef} preload=\"auto\" />\n                  <div\n                    className=\"Message__audio-progress\"\n                    style={{ width: '40%' }}></div>\n                  <div className=\"Message__audio-info\">\n                    <div className=\"Message__audio-btn\">\n                      <button type=\"button\" onClick={() => togglePlay()}>\n                        <img\n                          src={isPlaying ? pauseIcon : playIcon}\n                          alt={isPlaying ? 'Pause' : 'Play'}\n                        />\n                      </button>\n                    </div>\n                    <div className=\"Message__audio-diagram\">\n                      <img src={voiceDiagramIcon} alt=\"Voice diagram\" />\n                    </div>\n                    <span className=\"Message__audio-duration\">{audioTime}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n          {!!attachments.length && (\n            <ul className=\"Message__attachments\">\n              {attachments.map((attach, index) => (\n                <li className=\"Message__attachments-item\" key={index}>\n                  <img src={attach.url} alt={attach.fileName} />\n                </li>\n              ))}\n            </ul>\n          )}\n          {date && <Time value={date} />}\n        </div>\n      </div>\n      {isMine && <CheckMarker checked={isReaded} />}\n    </div>\n  )\n}\n\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  user: PropTypes.object,\n  text: PropTypes.string,\n  date: PropTypes.number,\n  attachments: PropTypes.array,\n  audioFile: PropTypes.string,\n  isMine: PropTypes.bool,\n  isReaded: PropTypes.bool,\n  isTyping: PropTypes.bool,\n}\n\nMessage.defaultProps = {\n  user: {},\n  attachments: [],\n  audioFile: '',\n  isMine: false,\n  isReaded: false,\n  isTyping: false,\n}\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}