{"ast":null,"code":"var _jsxFileName = \"/home/front/projects/react-chat/src/components/Message/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport formatDistance from 'date-fns/formatDistance';\nimport ruLocale from 'date-fns/locale/ru';\nimport readedIcon from \"assets/img/readedIcon.svg\";\nimport checkIcon from \"assets/img/checkIcon.svg\";\nimport './Message.scss';\n\nconst Message = ({\n  avatar,\n  user,\n  text,\n  date,\n  attachments,\n  isMine,\n  isReaded\n}) => {\n  const beautyDate = formatDistance(date, new Date(), {\n    addSuffix: true,\n    locale: ruLocale,\n    includeSeconds: true\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('Message', {\n      'Message--my': isMine\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar,\n    alt: `Avatar ${user.fullName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__bubble\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"Message__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, text)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"Message__date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, beautyDate)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__attachments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__attachments-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }))), isMine && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message__checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: isReaded ? readedIcon : checkIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }))));\n};\n\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  user: PropTypes.object,\n  text: PropTypes.string,\n  date: PropTypes.number,\n  attachments: PropTypes.object,\n  isMine: PropTypes.bool,\n  isReaded: PropTypes.bool\n};\nMessage.defaultProps = {\n  user: {},\n  attachments: {},\n  isMine: false,\n  isReaded: false\n};\nexport default Message;","map":{"version":3,"sources":["/home/front/projects/react-chat/src/components/Message/index.js"],"names":["React","PropTypes","classNames","formatDistance","ruLocale","Message","avatar","user","text","date","attachments","isMine","isReaded","beautyDate","Date","addSuffix","locale","includeSeconds","fullName","readedIcon","checkIcon","propTypes","string","object","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport formatDistance from 'date-fns/formatDistance'\nimport ruLocale from 'date-fns/locale/ru'\n\nimport readedIcon from 'assets/img/readedIcon.svg'\nimport checkIcon from 'assets/img/checkIcon.svg'\n\nimport './Message.scss'\n\nconst Message = ({ avatar, user, text, date, attachments, isMine, isReaded }) => {\n  const beautyDate = formatDistance(date, new Date(), {\n    addSuffix: true,\n    locale: ruLocale,\n    includeSeconds: true,\n  })\n\n  return (\n    <div className={classNames('Message', { 'Message--my': isMine })}>\n      <div className=\"Message__content\">\n        <div className=\"Message__avatar\">\n          <img src={avatar} alt={`Avatar ${user.fullName}`} />\n        </div>\n        <div className=\"Message__info\">\n          <div>\n            <div className=\"Message__bubble\">\n              <p className=\"Message__text\">{text}</p>\n            </div>\n            <span className=\"Message__date\">{beautyDate}</span>\n          </div>\n          <div className=\"Message__attachments\">\n            <div className=\"Message__attachments-item\"></div>\n          </div>\n        </div>\n        {isMine && (\n          <div className=\"Message__checked\">\n            <img src={isReaded ? readedIcon : checkIcon} alt=\"\" />\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nMessage.propTypes = {\n  avatar: PropTypes.string,\n  user: PropTypes.object,\n  text: PropTypes.string,\n  date: PropTypes.number,\n  attachments: PropTypes.object,\n  isMine: PropTypes.bool,\n  isReaded: PropTypes.bool,\n}\n\nMessage.defaultProps = {\n  user: {},\n  attachments: {},\n  isMine: false,\n  isReaded: false,\n}\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}